AWSTemplateFormatVersion: "2010-09-09"
Description: VPC with public and private subnets

#-------------------------------------------------------------------------------
#--[ PARAMETERS ]---------------------------------------------------------------
#-------------------------------------------------------------------------------

Parameters:
  Env:
    Description: Environment name (dev/staging/prod)
    Type: String
    AllowedValues:
      - dev
      - prod
      - staging

  Project:
    Description: Project to set for all resources created
    Type: String

  PrivateSubnetsCidr:
    Description: "Comma delimited list of 3 private subnets CIDR. (ex: 10.0.10.0/24,10.0.11.0/24,10.0.12.0/24)"
    Type: CommaDelimitedList

  PublicSubnetsCidr:
    Description: "Comma delimited list of 3 public subnets CIDR. (ex: 10.0.0.0/24,10.0.1.0/24,10.0.2.0/24)"
    Type: CommaDelimitedList

  VpcCidr:
    Description: VPC CIDR (/16)
    Type: String

#-------------------------------------------------------------------------------
#--[ RESOURCES ]----------------------------------------------------------------
#-------------------------------------------------------------------------------

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}
        - Key: Env
          Value: !Ref Env

  # CIDR Block IPv6
  Ipv6VPCCidrBlock:
    Type: "AWS::EC2::VPCCidrBlock"
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref VPC

  # Internet Gateway
  Igw:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}
        - Key: Env
          Value: !Ref Env

  IgwAttach:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref VPC

  Eigw:
    Type: "AWS::EC2::EgressOnlyInternetGateway"
    Properties:
      VpcId: !Ref VPC

  # Subnets publics
  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Select [ 0, !Ref PublicSubnetsCidr ]
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-public-a
        - Key: Env
          Value: !Ref Env

  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !Select [ 1, !Ref PublicSubnetsCidr ]
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-public-b
        - Key: Env
          Value: !Ref Env

  PublicSubnet3:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Select [ 2, !Ref PublicSubnetsCidr ]
      MapPublicIpOnLaunch: True
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-public-c
        - Key: Env
          Value: !Ref Env

  # Subnets privates
  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Select [ 0, !Ref PrivateSubnetsCidr ]
      MapPublicIpOnLaunch: False
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-a
        - Key: Env
          Value: !Ref Env

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: !Select [ 1, !Ref PrivateSubnetsCidr ]
      MapPublicIpOnLaunch: False
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-b
        - Key: Env
          Value: !Ref Env

  PrivateSubnet3:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs ]
      CidrBlock: !Select [ 2, !Ref PrivateSubnetsCidr ]
      MapPublicIpOnLaunch: False
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-c
        - Key: Env
          Value: !Ref Env

  # Route Tables
  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-public
        - Key: Env
          Value: !Ref Env

  RouteTablePrivate1:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-a
        - Key: Env
          Value: !Ref Env

  RouteTablePrivate2:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-b
        - Key: Env
          Value: !Ref Env

  RouteTablePrivate3:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Env}-private-c
        - Key: Env
          Value: !Ref Env

  # Route Tables Associations
  PublicSubnet1Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      SubnetId: !Ref PublicSubnet3

  PrivateSubnet1Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      SubnetId: !Ref PrivateSubnet2

  PrivateSubnet3Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTablePrivate3
      SubnetId: !Ref PrivateSubnet3

  # Endpoint S3
  S3Endpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      RouteTableIds:
        - !Ref RouteTablePrivate1
        - !Ref RouteTablePrivate2
        - !Ref RouteTablePrivate3
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref VPC

  # NAT Gateways
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway3EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  NatGateway3:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3

  # Public Routes
  PublicDefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn: Igw
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw

  PublicDefaultRouteV6:
    Type: "AWS::EC2::Route"
    DependsOn: Igw
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationIpv6CidrBlock: "::/0"
      GatewayId: !Ref Igw

  # Private Routes
  Private1DefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn: Igw
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  Private1DefaultRouteV6:
    Type: "AWS::EC2::Route"
    DependsOn: Eigw
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      DestinationIpv6CidrBlock: "::/0"
      EgressOnlyInternetGatewayId: !Ref Eigw

  Private2DefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn: Igw
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
  Private2DefaultRouteV6:
    Type: "AWS::EC2::Route"
    DependsOn: Eigw
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      DestinationIpv6CidrBlock: "::/0"
      EgressOnlyInternetGatewayId: !Ref Eigw

  Private3DefaultRoute:
    Type: "AWS::EC2::Route"
    DependsOn: Igw
    Properties:
      RouteTableId: !Ref RouteTablePrivate3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway3
  Private3DefaultRouteV6:
    Type: "AWS::EC2::Route"
    DependsOn: Eigw
    Properties:
      RouteTableId: !Ref RouteTablePrivate3
      DestinationIpv6CidrBlock: "::/0"
      EgressOnlyInternetGatewayId: !Ref Eigw

#-------------------------------------------------------------------------------
#--[ OUTPUTS/EXPORT ]-----------------------------------------------------------
#-------------------------------------------------------------------------------

Outputs:
  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${Project}-${Env}-VPCid

  Env:
    Description: Env
    Value: !Ref Env
    Export:
      Name: !Sub ${Project}-Env

  Project:
    Description: Env
    Value: !Ref Project
    Export:
      Name: !Sub ${Project}-Project

  PublicSubnet1:
    Description: Public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Project}-${Env}-PublicSubnet1

  PublicSubnet2:
    Description: Public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Project}-${Env}-PublicSubnet2

  PublicSubnet3:
    Description: Public subnet 3
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub ${Project}-${Env}-PublicSubnet3

  PrivateSubnet1:
    Description: Private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Project}-${Env}-PrivateSubnet1

  PrivateSubnet2:
    Description: Private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Project}-${Env}-PrivateSubnet2

  PrivateSubnet3:
    Description: Private subnet 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub ${Project}-${Env}-PrivateSubnet3
